<style lang="less">
  @import "../common/less/mixin.less";

  .keyboard-wrap{
    display: flex;
    align-items: stretch;
    padding: 30rpx;
    font-size:28rpx;

    .input-wrap{
      flex: 1;
      height: 100rpx;
      box-sizing: border-box;
      // padding: 0 30rpx;
      border-bottom-left-radius: 50rpx;
      border-top-left-radius: 50rpx;
      background-color: rgba(255,255,255, 1);
      color: #000;
      .input{
        padding: 0 30rpx;
        height: 100%;
        line-height: 100%;
      }
      .btn{
        padding: 0;
        height: 100%;
        line-height: 100rpx;
        border-bottom-left-radius: 50rpx;
        border-top-left-radius: 50rpx;
        background-color: #fff;
        color: #B98334;
        font-size: 16px;
        &::after{
          border: none;
        }
        display: flex;
        justify-content:center;

      }
      .btn-hover{
        background-color: #DBDBDB;
      }
      .voice-icon{
        margin-left: 10rpx;
        width: 18px;
        height: 100%;
        background-position: center;
        background-size: contain;
        background-repeat: no-repeat;
      }
    }
    .icon-wrap{
      // padding: 30rpx 35rpx;
      box-sizing: border-box;
      flex: 0 0 116rpx;
      width: 116rpx;
      background-color: #B98334;
      border-bottom-right-radius: 50rpx;
      border-top-right-radius: 50rpx;
      .keyboard-icon{
        display: block;
        // width: 100px;
        // height: 100px;
        padding: 30rpx 35rpx;
        width: 116rpx;
        height: 100rpx;
        box-sizing: border-box;
        // background-size: contain;
        // background-repeat: no-repeat;
        // .bg-image("http://localhost:40000/coupon/icon_keyboard@_ratio_x.png");
        // background-image: url(http://localhost:40000/coupon/icon_keyboard@2x.png);
      }
    }
  }

</style>
<template>
  <view class="keyboard-wrap">
    <view class="input-wrap">
      <input wx:if="{{textType}}" class="input"
             value="{{sendValue}}"
             confirm-type="send"
             confirm-hold="true"
             cursor-spacing="30"
             bindconfirm="confirm"
             bindblur="blur"
             placeholder="Type message..."/>
      <button hover-class="btn-hover" wx:else  class="btn"
              hover-start-time="10"
              hover-stay-time="20"
              @longpress="longTap"
              @touchstart="touchStart"
              @touchmove="touchMove"
              @touchend="tapEnd">
        <text>{{btnText}}</text><image class="voice-icon" mode="aspectFit" src="{{voice_icon}}"></image>
      </button>
    </view>
    <view class="icon-wrap" bindtap="toggle">
      <!--<view class="keyboard-icon"></view>-->
      <image class="keyboard-icon" mode="aspectFit" src="{{keyboard_icon}}"></image>
    </view>

    <!--<speach id="toast"></speach>-->
  </view>
</template>icon
<script>
  import wepy from 'wepy'
  import baseMixin from '../mixins/base'
  // import Speach from './speachtoast'
  // import Counter from './counter' // alias example
  // import Toast from 'wepy-com-toast'

  export default class Panel extends wepy.component {
    data = {
      recorderManager: null,
      touchDot: 0,
      touchMoveDot: 0,
      sendValue: '',
      textType: true, // true: text, false: voice
      recs: [],
      voice_icon: '/common/img/icon_yuyin@2x.png',
      keyboard_icon: '/common/img/icon_keyboard@2x.png',
      btnText: '按住讲话'
    }

    watch = {
      textType (isText) {
        this.keyboard_icon = isText ? this.getImg('/common/img/icon_record', 'png') : this.getImg('/common/img/icon_keyboard', 'png')
      }
    }

    components = {
      // speach: Speach
      // toast: Toast
      // counter: Counter
    }

    mixins = [baseMixin]

    methods = {
      btnTap (e) {
        console.log('btn tap')
      },
      toggle (e) {
        this.textType = !this.textType
        this.$invoke('../speach', 'hide', {})
        console.log('toggle')
      },
      touchStart (e) {
        console.log('start')
        console.log(e)
        this.touchDot = e.touches[0]['pageY']
      },
      touchMove (e) {
        this.touchMoveDot = e.touches[0]['pageY']
        if (this.touchMoveDot - this.touchDot > 50) {
          // this.$invoke('../speach', 'cancel', {})
        }
      },
      touchend (e) {
        this.touchMoveDot = e.touches[0]['pageY']
        if (this.touchMoveDot - this.touchDot > 50) {
          console.log('operate cancel')
          this.$invoke('../speach', 'cancel', {})
        }
      },
      longTap (e) {
        const self = this
        this.btnText = '松开发送'
        /* let promise = this.$invoke('speachtoast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        }) */

        // 短时震动
        wx.vibrateLong({
          success: function () {
            console.log('震动成功')
          },
          fail: function () {
            console.log('震动失败')
          }
        })

        this.$invoke('../speach', 'show', {
          // img: '../common/img/speaching.png',
          tip: ' ',
          title: '聆听中,请说话...',
          notice: '手指上划,取消发送',
          duration: 1000 * 60
          // no_mask: true
        })

        const recorderManager = wx.getRecorderManager()
        this.recorderManager = recorderManager

        recorderManager.onStart(() => {
          console.log('recorder start')
        })
        recorderManager.onResume(() => {
          console.log('recorder resume')
        })
        recorderManager.onPause(() => {
          console.log('recorder pause')
        })
        recorderManager.onStop((res) => {
          console.log('recorder stop', res)
          const { tempFilePath } = res

          this.$invoke('../speach', 'show', {
            tip: '',
            title: '请稍后',
            notice: '',
            duration: 1000 * 10
          })

          // 上传语音文件至服务器
          wepy.uploadFile({
            url: self.host + 'voice/recognize',
            filePath: tempFilePath,
            name: 'record',
            // header: {}, // 设置请求的 header
            formData: {
              'msg': 'voice'
            }, // HTTP 请求中其他额外的 form data
            complete: function () {
              // complete
              console.log('complete')
              self.$invoke('../speach', 'hide', {})
            }
          }).then(res => {
            // success
            // let result = JSON.parse(res.data)
            const json = JSON.parse(res.data)
            const voiceText = json.data.result || []
            // console.log(voiceText)
            // send a voice message
            console.log(voiceText)
            if (json.data.err_no) {
              self.$emit('add-message', {
                type: 'me',
                content: '对不起，没听清楚您说什么~'
              })
            } else {
              self.$emit('add-message', {
                type: 'customer',
                content: voiceText[0].slice(0, voiceText[0].length - 1)
              })
            }

            // self.voiceText = json.data.result[0]
            // self.$apply()
            // var jsonMsg = JSON.parse(json.msg)
            // console.log(jsonMsg.result)
            /*
             wepy.navigateTo({
             url: '../voicePage/voicePage?voiceData=' + jsonMsg.result.join('')
             })
             */
          }, err => {
            console.log(err)
          }).then(() => {
            self.$invoke('../speach', 'hide', {})
          })
        })
        /* recorderManager.onFrameRecorded((res) => {
          const { frameBuffer } = res
          console.log('frameBuffer.byteLength', frameBuffer.byteLength)
        }) */

        const options = {
          // duration: 3000,
          sampleRate: 16000,
          numberOfChannels: 1,
          encodeBitRate: 64000,
          format: 'mp3'
          // frameSize: 10
        }

        recorderManager.start(options)
        // this.$invoke('counter', 'minus', 45, 6)
      },
      tapEnd () {
        this.btnText = '按住讲话'
        if (this.recorderManager) {
          this.recorderManager.stop()
        }
      },
      confirm (e) {
        console.log('confirm')
        let value = e.detail.value
        this.sendValue = null // Math.random()
        this.setData({
          sendValue: ''
        })
        this.$apply()
        this.$emit('add-message', {
          type: 'customer',
          content: value
        })
      },
      blur (e) {
        let value = e.detail.value
        /*
        this.$emit('add-message', {
          type: 'customer',
          content: Math.random()
        })
        */
        /* this.sendValue = null // Math.random()
        this.setData({
          sendValue: ''
        }) */
        // this.$apply()
        // console.log('blur', e)
      }
    }

    onLoad () {
      let self = this
      this.initDevice()
      this.keyboard_icon = this.getImg('/common/img/icon_record', 'png')
      this.voice_icon = this.getImg('/common/img/icon_yuyin', 'png')
      this.recs = [
        {key: 'roomService', text: '客房服务'},
        {key: 'texiService', text: '出行租车'},
        {key: 'foodService', text: '美食推荐'},
        {key: 'accidentService', text: '故障服务'}
      ]
      this.$apply()
      /*
      wepy.request('getRecommend').then((d) => {})
      */
    }
  }
</script>
