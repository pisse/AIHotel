<style lang="less" scoped="">
  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-top: 10rpx;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }
  .default {
    background-image: linear-gradient( 45deg, #5A4B43 , #2A2A2A 50% , #474139);
  }
  .grey {
    background-image: linear-gradient( 0deg, #B5B2B4 , #ffffff);
  }
  .blue {
    background-image: linear-gradient( 45deg, #3B53F4 , #51C5FF, #fff);
  }
  .pink {
    background-image: linear-gradient( 0deg, #FF95B7 , #FFD8E8);
  }
  .background-pg{
    position: absolute;
    bottom: 240rpx;
    width: 100%;
    .bg-item{
      width: 160rpx;
      height: 200rpx;
      display: inline-block;
      margin-right: 30rpx;
      border-radius: 10rpx;
      text-align:center;
      line-height:200rpx;
      &:first-child{
        margin-left: 30rpx;
      }
      &.selected {
        border: 2px solid yellow;
      }
      &.custom {
        background-color: #fff;
        &:after{
          position: absolute;
          content: '+';
          display: inline-block;
          width: 30rpx;
          font-size: 40rpx;
          margin-left: -15rpx;
          text-align: center;
        }
      }
    }
  }
  .foot-btns{
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 100rpx;
    .cancel, .confirm{
      width: 50%;
      display: inline-block;
      text-align: center;
      line-height: 100rpx;
      color: #fff;
      font-size: 28rpx;
    }
    .cancel{
      background-color: #74B4F4;
    }
    .confirm{
      background-color: #DAD8DF;
      &.active {
        background-color: #3B53F4;
      }
    }
  }

</style>
<template>
  <view class="container" style="background-image: {{previewBg}}">
    <view class="userinfo">
      <view class="avatar-bg"><image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}"/></view>
      <view class="userinfo-nickname">{{ userInfo.nickName }}</view>
    </view>

    <repeat for="{{messages}}" key="index" index="index" item="item">
      <message :item="item"></message>
    </repeat>

    <view class="background-pg">
      <scroll-view scroll-x="true" style=" white-space: nowrap; display: flex" >
        <repeat for="{{bgcolors}}" key="index" index="index" item="setting">
          <view class="bg-item {{setting.class}} {{setting.isSelected ? 'selected': ''}}"  bindtap="select({{setting}})">
          </view>
        </repeat>
      </scroll-view>
    </view>

    <view class="foot-btns">
      <view class="cancel" bindtap="cancel">恢复默认</view>
      <view class="confirm {{isActive ? 'active': ''}}" bindtap="confirm">应用</view>
    </view>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import Message from '@/components/message' // alias example
  import baseMixin from '@/mixins/base'

  const MessageBackgroundImg = 'message-background-image'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '自定义背景'
    }
    components = {
      message: Message
    }

    computed = {
      isActive () {
        return this.originBg != this.previewBg
      }
    }

    mixins = [baseMixin]

    data = {
      originBg: '',
      previewBg: 'linear-gradient( 45deg, #5A4B43 , #2A2A2A 50% , #474139)',
      bgcolors: [
        {class: 'default', bgImage: 'linear-gradient( 45deg, #5A4B43 , #2A2A2A 50% , #474139)'},
        {class: 'grey', bgImage: 'linear-gradient( 0deg, #B5B2B4 , #ffffff)'},
        {class: 'pink', bgImage: 'linear-gradient( 0deg, #FF95B7 , #FFD8E8)'},
        {class: 'blue', bgImage: 'linear-gradient( 45deg, #3B53F4 , #51C5FF, #fff)'},
        {class: 'custom', bgImage: 'linear-gradient( 45deg, #fff , #fff)'}],
      userInfo: {
        nickName: '加载中...'
      },
      messages: [
        {type: 'customer', content: '我想了解下早餐时间'},
        {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'}
      ]
    }

    methods = {
      select (item, event) {
        let self = this
        this.bgcolors.forEach((val) => {
          if (item.class != val.class) {
            val.isSelected = false
          } else {
            val.isSelected = true
          }
        })
        // 自定义图片需要保存临时文件，再放到本地存储中
        if (item.class == 'custom') {
          wx.chooseImage({
            count: 1, // 默认9
            sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
            sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
            success: function (res) {
              // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
              var tempFilePaths = res.tempFilePaths
              // 删除原有图片
              /* wx.getSavedFileList({
                success: function(res) {
                  if (res.fileList.length > 0){
                    wx.removeSavedFile({
                      filePath: res.fileList[0].filePath,
                      complete: function(res) {
                        console.log(res)
                      }
                    })
                  }
                }
              }) */
              // 保存本次上传
              /* wx.saveFile({
                tempFilePath: tempFilePaths[0],
                success: function(res) {
                  var savedFilePath = res.savedFilePath
                  console.log(savedFilePath)
                  wx.setStorage({
                    key: MessageBackgroundImg,
                    data: `url(${savedFilePath})`
                  })
                },
                fail: function () {
                  console.log('save error')
                }
              }) */
              // 上传图片文件至服务器
              console.log('temp file page === ' + tempFilePaths)
              wepy.uploadFile({
                url: self.host + 'upload/img',
                filePath: tempFilePaths[0],
                name: 'image',
                // header: {}, // 设置请求的 header
                formData: {
                }, // HTTP 请求中其他额外的 form data
                success: function (res) {
                },
                fail: function (err) {
                  // fail
                  console.log(err)
                },
                complete: function () {
                  // complete
                }
              }).then(res => {
                console.log(res)
                var result = JSON.parse(res.data)
                let url = `url(https://jdzs.wezhuiyi.com/file/${result.data})`
                /* wx.setStorage({
                 key: MessageBackgroundImg,
                 data: url
                 }) */
                self.previewBg = url
                console.log(url)
                self.$apply()
              })
            }
          })
        } else {
          // 设置预览背景
          this.previewBg = item.bgImage
        }
        this.$apply()
      },
      cancel () {
        this.previewBg = this.originBg
      },
      confirm () {
        wx.setStorage({
          key: MessageBackgroundImg,
          data: this.previewBg
        })
        wx.showToast({
          title: '设置成功',
          icon: 'success',
          duration: 1500,
          success: function () {
            setTimeout(() => {
              wx.navigateBack()
            }, 1500)
          }
        })
      }
    }

    events = {
    }

    onLoad() {
      const self = this
      this.$parent.getUserInfo(function (userInfo) {
        console.log(userInfo)
        if (userInfo) {
          // console.log(1212)
          self.userInfo = userInfo
        }
        self.$apply()
      })
      // 获取本地存储的背景图片
      try {
        var bgImage = wx.getStorageSync(MessageBackgroundImg)
        if (bgImage) {
          this.previewBg = bgImage
          this.originBg = bgImage
        }
      } catch (e) {
      }
    }
  }
</script>
