<style lang="less">
  .userinfo {
    padding-top: 15rpx;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }
  .avatar-bg{
    padding: 2rpx;
    background-image: linear-gradient( 135deg, #B98334, #ffffff);
    line-height: 0;
    border-radius: 50%;
  }

  .userinfo-avatar {
    width: 80rpx;
    height: 80rpx;
    border-radius: 50%;
    // border:2rpx solid red;

  }

  .userinfo-nickname {
    color: #aaa;
  }
</style>
<template>
  <view class="container1">
    <view class="page-bd">
      <scroll-view scroll-y="true" style="height: {{clientHeight + 'px'}}">
        <view class="userinfo" @tap="handleViewTap">
          <view class="avatar-bg"><image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}"/></view>
          <!--<view class="userinfo-nickname">{{ userInfo.nickName }}</view>-->
        </view>

        <repeat for="{{messages}}" key="index" index="index" item="item">
          <message :item="item"></message>
        </repeat>
      </scroll-view>

    </view>

    <view class="page-ft" style="height: {{footHeight ? footHeight + 'rpx':'auto'}}">
      <recommend></recommend>

      <keyboard></keyboard>

      <!--<navigator url="/test/test-bg" hover-class="navigator-hover">跳转到测试</navigator>-->
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import List from '../components/list'
  import Panel from '@/components/panel' // alias example
  import Message from '@/components/message' // alias example
  import Recommend from '@/components/recommend' // alias example
  import Keyboard from '@/components/keyboard' // alias example
  import Counter from 'counter' // alias example
  import Group from '../components/group'
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/test'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '智能助理'
    }
    components = {
      panel: Panel,
      counter1: Counter,
      counter2: Counter,
      list: List,
      group: Group,
      toast: Toast,
      message: Message,
      recommend: Recommend,
      keyboard: Keyboard
    }

    mixins = [testMixin]

    data = {
      clientHeight: '',
      messages: [
        {type: 'time', title: '10:00am', content: ''},
        {type: 'me', content: '我漂亮吗', 'img': '../common/img/head.png'},
        {type: 'customer', content: '我想了解下早餐时间'},
        {
          type: 'recommend',
          list: [{
            title: '客房服务',
            items: ['客房水没了', '送个剃须刀上来', '马上打扫']
          }, {
            title: '最新活动',
            items: ['活动1', '活动2', '活动3']
          }, {
            title: '预定餐厅',
            items: ['西餐', '中餐', '点心']
          }]
        },
        {type: 'tip', title: '正在为您转接人工...', content: '【工程部】客户经理马上为您服务'},
        {type: 'me', content: '你可能感兴趣以下问题', list: ['自然风景', '人文景观', '美食街区']},
        {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'},
        {type: 'me', content: '', 'img': '../common/img/head.png'},
        {type: 'customer', content: '我想了解下早餐时间'}, {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'},
        {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'},
        {type: 'customer', content: '我想了解下早餐时间'}, {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'},
        {type: 'customer', content: '我想了解下早餐时间'}, {type: 'customer', content: '我想了解下早餐时间'}
      ],
      voiceText: '',
      mynum: 20,
      userInfo: {
        nickName: '加载中...'
      },
      normalTitle: '原始标题',
      setTimeoutTitle: '标题三秒后会被修改',
      count: 0,
      netrst: '',
      groupList: [
        {
          id: 1,
          name: '点击改变',
          list: [
            {
              childid: '1.1',
              childname: '子项，点我改变'
            }, {
              childid: '1.2',
              childname: '子项，点我改变'
            }, {
              childid: '1.3',
              childname: '子项，点我改变'
            }
          ]
        },
        {
          id: 2,
          name: '点击改变',
          list: [
            {
              childid: '2.1',
              childname: '子项，点我改变'
            }, {
              childid: '2.2',
              childname: '子项，点我改变'
            }, {
              childid: '2.3',
              childname: '子项，点我改变'
            }
          ]
        },
        {
          id: 3,
          name: '点击改变',
          list: [
            {
              childid: '3.1',
              childname: '子项，点我改变'
            }
          ]
        }
      ]
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      plus () {
        this.mynum++
      },
      say () {
        const self = this
        const recorderManager = wx.getRecorderManager()

        recorderManager.onStart(() => {
          console.log('recorder start')
        })
        recorderManager.onResume(() => {
          console.log('recorder resume')
        })
        recorderManager.onPause(() => {
          console.log('recorder pause')
        })
        recorderManager.onStop((res) => {
          console.log('recorder stop', res)
          const { tempFilePath } = res
          // 上传语音文件至服务器
          wepy.uploadFile({
            url: 'http://localhost:40000/node/voice/recognize',
            filePath: tempFilePath,
            name: 'record',
            // header: {}, // 设置请求的 header
            formData: {
              'msg': 'voice'
            }, // HTTP 请求中其他额外的 form data
            success: function (res) {
              // success
              console.log('begin')
              console.log(res.data)
              var json = JSON.parse(res.data)
              console.log(json.data.result)
              self.voiceText = json.data.result[0]
              self.$apply()
              // var jsonMsg = JSON.parse(json.msg)
              // console.log(jsonMsg.result)
              /*
              wepy.navigateTo({
                url: '../voicePage/voicePage?voiceData=' + jsonMsg.result.join('')
              })
              */
            },
            fail: function (err) {
              // fail
              console.log(err)
            },
            complete: function () {
              // complete
            }
          })
        })
        recorderManager.onFrameRecorded((res) => {
          const { frameBuffer } = res
          console.log('frameBuffer.byteLength', frameBuffer.byteLength)
        })

        const options = {
          duration: 3000,
          sampleRate: 16000,
          numberOfChannels: 1,
          encodeBitRate: 64000,
          format: 'mp3',
          frameSize: 50
        }

        recorderManager.start(options)
      },
      endSay () {
        wx.stopRecord()
      },
      toast () {
        let promise = this.$invoke('toast', 'show', {
          title: '自定义标题',
          img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
        })

        promise.then((d) => {
          console.log('toast done')
        })
      },
      tap () {
        console.log('do noting from ' + this.$name)
      },
      communicate () {
        console.log(this.$name + ' tap')

        this.$invoke('counter2', 'minus', 45, 6)
        this.$invoke('counter1', 'plus', 45, 6)

        this.$broadcast('index-broadcast', 1, 3, 4)
      },
      request () {
        let self = this
        let i = 10
        let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ==']
        while (i--) {
          wepy.request({
            url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
            success: function (d) {
              self.netrst += d.data + '.'
              self.$apply()
            }
          })
        }
      },
      counterEmit (...args) {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    onLoad() {
      let self = this
      this.rpx2px()
      this.clientHeight = this.$parent.globalData.clientHeight
      this.$parent.getUserInfo(function (userInfo) {
        if (userInfo) {
          self.userInfo = userInfo
        }
        self.normalTitle = '标题已被修改'

        self.setTimeoutTitle = '标题三秒后会被修改'
        setTimeout(() => {
          self.setTimeoutTitle = '到三秒了'
          self.$apply()
        }, 3000)

        self.$apply()
      })
    }
  }
</script>
