<style lang="less">
  .nav-wrap {
    position: fixed;
    z-index: 1;
    top: 0;
    // height: 128rpx;
    height: 55rpx;
    padding-top: 0;
    width: 100%;
    // display: flex;
    // flex-direction: column;
    // align-items: flex-start;
    background-color: #2A2A2A;
    .nav-bar {
      width: 100%;
      font-size: 36rpx;
      text-align: center;
      color: #fff;
      // height:110rpx;
      height:55rpx;
      line-height:110rpx;
      // margin-top:30rpx;
    }
  }
  .avatar-bg{
    position: absolute;
    // top: 73rpx;
    top: 0rpx;
    padding: 2rpx;
    // background-image: linear-gradient( 135deg, #B98334, #ffffff);
    background-image: linear-gradient(54deg, #424242 0%, #2A2A2A 100%);
    line-height: 0;
    border-radius: 50%;
    margin-left: 30rpx;
    width: 110rpx;
    height: 110rpx;
    border: 2rpx solid #81715D;
    // opacity: 0.8;
  }

  .userinfo-avatar {
    width: 70rpx;
    height: 54rpx;
    margin-left: 20rpx;
    margin-top: 28rpx;
    // border-radius: 50%;
    // border:2rpx solid red;

  }
  .scroll_view {
    padding-top: 160rpx;
  }

  .userinfo-nickname {
    color: #aaa;
  }
  #scroll_bottom_pos {
    height: 0;
  }
  .wxc-dialog .input-wrap{
    text-align: center;
    font-size: 26rpx;
    margin-bottom: 10rpx;
    .input{
      height: 80rpx;
      // border-bottom: 1px solid rgb(233,233,233);
    }
  }
</style>
<template>
  <view class="container"  style="background-image: {{previewBg}}">
    <view class="nav-wrap">
      <view class="nav-bar"></view>
      <view class="avatar-bg"><image class="userinfo-avatar" src="{{ headImg }}"/></view>
      <!--<view class="userinfo-nickname">{{ userInfo.nickName }}</view>-->
    </view>
    <view class="page-bd">
      <scroll-view  scroll-y="true" style="height: {{clientHeight + 'px'}}"
                    scroll-with-animation="true"
                    enable-back-to-top="true"
                    scroll-top="{{scrollTop}}">
        <view id="scroll_view" class="scroll_view">
          <repeat for="{{messages}}" key="index" index="index" item="item">
            <message :item="item" @add-message.user="messageFeedback" @action-message.user="messageAction"></message>
          </repeat>
         <!-- <view id="scroll_bottom_pos"></view>-->
        </view>
      </scroll-view>

    </view>

    <view class="page-ft" style="height: {{footHeight ? footHeight + 'rpx':'auto'}}">
      <recommend @add-message.user="newMessage"></recommend>

      <keyboard @add-message.user="newMessage"></keyboard>

      <!--<navigator url="/test/test-bg" hover-class="navigator-hover">跳转到测试</navigator>-->
    </view>

    <speach id="toast"></speach>

    <bgsetting></bgsetting>

    <wxc-dialog class="wxc-dialog" title="信息认证" content="" confirm-text="确认"
                bindtap="masktap" confirmColor="#3B53F4" bindconfirm="onConfirm" bindcancel="onCancel">
      <view class="input-wrap">
        <input class="input"  cursor-spacing="120" type="number" focus="{{autoFocus}}" bindinput="roomIpt" placeholder="房间号" />
        <input class="input"  cursor-spacing="80" type="password" value="{{cardNum}}" bindinput="cardIpt" placeholder="身份证后四位" />
      </view>
    </wxc-dialog>

    <!--<import src="../../packages/wxParse/wxParse.wxml"/>
    <template is="wxParse" data="{{wxParseData:article.nodes}}"/>-->

  </view>
</template>

<script>
  import wepy from 'wepy'
  // import List from '../components/list'
  // import Panel from '@/components/panel' // alias example
  import Message from '@/components/message' // alias example
  import Speach from '@/components/speachtoast' // alias example
  import Recommend from '@/components/recommend' // alias example
  import Keyboard from '@/components/keyboard' // alias example
  import Bgsetting from '@/components/bgsetting' // alias example
  // import Group from '@/components/group'
  // import Toast from 'wepy-com-toast'
  import baseMixin from '@/mixins/base'
  import util from '@/utils/util.js'

  // import wxParse from '@/packages/wxParse/wxParse.js'

  const MessageBackgroundImg = 'message-background-image'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '智能助理',
      usingComponents: {
        'wxc-dialog': '../../packages/@minui/wxc-dialog/dist/index'
      }
    }
    components = {
      // panel: Panel,
      // list: List,
      // group: Group,
      // toast: Toast,
      message: Message,
      recommend: Recommend,
      keyboard: Keyboard,
      speach: Speach,
      bgsetting: Bgsetting
    }

    mixins = [baseMixin]

    data = {
      // toView: '',
      headImg: '',
      article: {
        nodes: [1, 2]
      },
      autoFocus: false,
      roomNum: '',
      cardNum: '',
      previewBg: 'linear-gradient( 45deg, #5A4B43 , #2A2A2A 50% , #474139)',
      scrollTop: 100,
      clientHeight: '',
      messages: [
        {type: 'tip', title: util.formatTime(new Date())},
        {type: 'me', content: '您好，小香在~我可以帮您预定房间、解答问题、递送物品。如您需要更多的客房服务，请您验证入住信息，', action: '立即验证>>'}
        // {type: 'me', content: '为了更好的服务到您，请您认证入住信息，', action: '立即验证'}
        /* {type: 'time', title: '10:00am', content: ''},
        {type: 'me', content: '我漂亮吗', 'img': '../common/img/head.png'},
        {type: 'customer', content: '我想了解下早餐时间'},
        {
          type: 'recommend',
          list: [{
            title: '客房服务',
            items: ['客房水没了', '送个剃须刀上来', '马上打扫']
          }, {
            title: '最新活动',
            items: ['活动1', '活动2', '活动3']
          }, {
            title: '预定餐厅',
            items: ['西餐', '中餐', '点心']
          }]
        },
        {type: 'tip', title: '正在为您转接人工...', content: '【工程部】客户经理马上为您服务'},
        {type: 'me', content: '你可能感兴趣以下问题', list: ['自然风景', '人文景观', '美食街区']},
        {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'},
        {type: 'me', content: '', 'img': '../common/img/head.png'},
        {type: 'customer', content: '我想了解下早餐时间'}, {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'},
        {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'},
        {type: 'customer', content: '我想了解下早餐时间'}, {type: 'me', content: '您好张先生，小朗在~我可以帮你预定房间、解答问题、递送物质...欢迎随时找我'},
        {type: 'customer', content: '我想了解下早餐时间'}, {type: 'customer', content: '我想了解下早餐时间'} */
      ],
      voiceText: '',
      userInfo: {
        nickName: '加载中...'
      },
      customerInfo: null,
      scrollTimer: null
    }

    computed = {
      now () {
        return +new Date()
      }
    }

    methods = {
      tap () {
        // console.log('do noting from ' + this.$name)
      },
      newMessage (message, $event) {
        console.log('get new message')
        let self = this
        // console.log(arguments)
        this.pushMessage(message)
        // this.messages.push(message)
        // 有客户资讯，调追一服务来回复
        if (message.type == 'customer') {
          this.question(message)
        }
        /*
        this.toView = 'scroll_bottom_pos'
        setTimeout(() => {
          self.toView = ''
        })
        */
      },
      messageFeedback (info, $event) {
        let message = {
          type: 'me',
          content: ''
        }
        let content = this.getContent(info)
        if (content) {
          Object.assign(message, content)
          this.pushMessage(message)
        }
      },
      messageAction (message) {
        // console.log(message)
        let info = message.info || {}
        if (info.answerType == 'image-text') {
          let answerJson = info['answerjson'][0]
          this.redirect(answerJson['url'])
        } else {
          this.showDialog()
        }
      },
      roomIpt (e) {
        this.roomNum = e.detail.value
      },
      cardIpt (e) {
        if (e.detail.value.length > 4) {
          wx.showToast({
            title: '最多4位',
            icon: 'none',
            duration: 1000
          })
        }
        let val = e.detail.value.slice(0, 4)
        // console.log(val)
        this.cardNum = val
        return val
      },
      onConfirm (e) {
        console.log(e)
        let self = this
        this.autoFocus = false
        if (this.roomNum && this.cardNum) {
          this.customerInfo = {
            room: this.roomNum,
            card: this.cardNum
          }
          // 写入客房认证信息到本地存储
          wx.setStorage({
            key: 'customerInfo',
            data: this.customerInfo
          })
          wx.showLoading({
            title: '认证中...'
          })
          setTimeout(function () {
            wx.showToast({
              title: '成功',
              icon: 'success',
              duration: 2000
            })
            wx.hideLoading()
            self.hideDialog()
          }, 2000)
        } else {
          let msg = !this.roomNum ? '请输入客房号' : '请输入身份证后四位'
          wx.showToast({
            title: msg,
            icon: 'none',
            duration: 2000
          })
        }
      },
      masktap (e) {
        this.hideDialog()
      }
    }

    showDialog () {
      let $dialog = this.$wxpage.selectComponent('.wxc-dialog')
      this.autoFocus = true
      $dialog && $dialog.show()
    }
    hideDialog () {
      let $dialog = this.$wxpage.selectComponent('.wxc-dialog')
      $dialog && $dialog.hide()
    }
    redirect(url) {
      let protocol = url.split(':')[0]
      if (protocol == 'wx') {
        wx.navigateTo({
          url: url.split(':')[1]
        })
      // web-view show
      } else {
      }
    }

    pushMessage (msg) {
      this.messages.push(msg)
      this.$apply()
      setTimeout(() => {
        this.pageScrollToBottom()
      }, 150)
    }

    pageScrollToBottom() {
      let self = this
      wx.createSelectorQuery().select('#scroll_view').boundingClientRect((rect) => {
        // 使页面滚动到底部
        /* wx.pageScrollTo({
         scrollTop: rect.bottom
         }) */
        // self.scrollTop += 100
        // console.log(rect)
        console.log(`scrolling height: ${rect.height}, top: ${rect.top}, bottom: ${rect.bottom}`)
        self.scrollTop = rect.height // - self.clientHeight
        self.$apply()
      }).exec()
    }

    question (message) {
      console.log('begin question')
      let self = this
      wepy.request({
        url: self.host + 'zy_service/query?question=' + message['content']
      }).then((res) => {
        let result = res.data.data
        if (result.status == 0) {
          let answer = this.getAnswer(result)
          this.pushMessage(answer)
        }
      })
    }
    getAnswer (result) {
      let answerType = result.answer_type
      if (result.clarify) {
        answerType = 'task'
      }
      // reject_focog
      if (result.recject_recog) {
        answerType = 'reject'
      }
      let answer = {}
      switch (answerType) {
        case 'reject':
          answer = this.getRejectAnswer(result)
          break
        case 'faq':
          answer = this.getFaqAnswer(result)
          break
        case 'task':
          answer = this.getTaskAnswer(result)
          break
        default:
          answer = this.getFaqAnswer(result)
      }
      return answer
    }
    getRejectAnswer () {
      let message = {
        type: 'me',
        content: '您好！很抱歉，您咨询的内容我们目前暂时无法为您提供准确的服务，欢迎联系我们的客服中心8888，咨询并获取您需要的服务。谢谢！'
      }
      return message
    }
    getTaskAnswer (data) {
      let message = {
        type: 'me',
        content: '',
        task_question: ''
      }
      let clarifyInfo = data.clarify
      message['content'] = clarifyInfo['answer'].replace(/'/g, '')
        .replace(/&nbsp;/g, ' ').replace(/&amp;/g, '&')
        .replace(/<\/?[^>]*>/g, '') // 过滤html的标签
        .replace(/&lt;/g, '<').replace(/&gt;/g, '>')
      message['task_question'] = clarifyInfo['question']
      return message
    }
    getFaqAnswer (data) {
      let infos = data.info
      let message = {
        type: 'me',
        content: ''
      }
      // recommend answer
      if (data.type == 300) {
        message['content'] = '您可能感兴趣以下问题'
        message['list'] = infos.slice()
         /*  .map(item => {
          return self.getContent(item, true)['content']
        }) */
      } else if (data.type == 200) { // direct answer
        Object.assign(message, this.getContent(infos[0]))
      }

      return message
    }

    getContent (info) {
      let message = {
        // answerType: info.answerType,
        info: info
      }
      switch (info.answerType) {
        case 'image-text':
          let answerJson = info['answerjson'][0]
          message['content'] = answerJson['title']
          message['img'] = answerJson['pic_url']
          break
        case 'text':
          message['content'] = info['answer']
          break
        case 'rich-text':
          message['content'] = info['answer']
          break
        default:
          message['content'] = info['answer'] || '对不起，这个我不能识别'
      }
      if (info.link == 'cmd') {
        // message['type'] = 'tip'
        if (!this.customerInfo) {
          this.showDialog()
          return false
        } else {
          message['content'] = '您的要求已收到，请稍等~'
        }
      }
      return message
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
      /* 'reset-client-height': (message, $event) => {
        console.log('reset client height')
        this.clientHeight = this.$parent.globalData.clientHeight
      } */
    }

    onReady () {
      this.pageScrollToBottom()
    }

    onShow () {
      /* let date = new Date()
      this.pushMessage({
        type: 'tip',
        title: util.formatTime(date)
      }) */
      // console.log(util.formatTime(date))
      // 获取本地存储的背景图片
      try {
        this.pageScrollToBottom()
        var bgImage = wx.getStorageSync(MessageBackgroundImg)
        if (bgImage) {
          this.previewBg = bgImage
        }
      } catch (e) {
      }
    }

    async onLoad() {
      let self = this
      // console.log(this.$wxapp.globalData)
      // this.rpx2px()

      if (!this.$parent.globalData.clientHeight) {
        // console.log('index page1, clientHeight' + this.$parent.globalData.clientHeight)
        wx.getSystemInfo({
          success: function (res) {
            const resFootHeight = self.globalData.footHeight * res.windowWidth / 750
            self.globalData.clientHeight = res.windowHeight - resFootHeight
            self.clientHeight = self.globalData.clientHeight
            // console.log(`height setting, clientHeight: ${self.clientHeight}, footHeight: ${resFootHeight}`)
            self.$apply()
          }
        })
      } else {
        this.clientHeight = this.$parent.globalData.clientHeight
        // console.log('index page2, clientHeight' + this.clientHeight)
        // self.$apply()
      }

      // 房客认证信息
      let customerInfo = wx.getStorageSync('customerInfo')
      this.customerInfo = customerInfo

      /* let article = '<div>我是HTML代码</div>'
      let htmlContent = wxParse.wxParse('article', 'html', article, this, 5)
      this.article = htmlContent['article'] */

      this.userInfo = await this.$parent.getUserInfo()
      this.headImg = this.getImg('/common/img/head', 'png')
      self.$apply()
      /* this.$parent.getUserInfo(function (userInfo) {
        console.log(userInfo)
        if (userInfo) {
          self.userInfo = userInfo
        }
        self.$apply()
      }) */
    }
  }
</script>
