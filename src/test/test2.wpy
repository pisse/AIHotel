<style lang="less">

  .dw{
    width: 400rpx;
    margin: 200rpx auto;
    display: flex;
    justify-content: space-between;
    .spot{
      width: 6rpx;
      height: 12rpx;
      border-radius: 3px;
      background-color: #fff;
    }
  }
</style>
<template>
  <view class="container">
    <button type="default"
             bindtap="start" hover-class="other-button-hover"> default </button>

    <button type="default"
            bindtap="tap" hover-class="other-button-hover"> sss </button>

    <view class="dw">
      <repeat for="{{spotNum}}" key="index" index="index" item="item">
        {{index}}<view class="spot" animation="{{anis[index]}}"></view>
      </repeat>

    </view>

    <speach id="toast"></speach>

  </view>
</template>

<script>
  import wepy from 'wepy'
  import Speach from '@/components/speachtoast'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'test'
    }
    components = {
      speach: Speach
    }

    mixins = []

    data = {
      spotNum: 12,
      anis: {
        '0': null
      }
    }
    computed = {
    }

    methods = {
      tap () {
        this.$invoke('./speach', 'show', {
          tip: '啊啊啊 ',
          img: '聆听中,请说话...',
          notice: '手指上划,取消发送',
          duration: 1000 * 60
        })
      },
      start () {
        console.log('start')

        for (let i = 0; i < this.spotNum; i++) {
          this.createAnimation(i)
        }
      }
    }

    createAnimation (idx) {
      var animation = wx.createAnimation({
        duration: 500,
        timingFunction: 'ease',
        delay: (idx % 6) * 100
      })
      var i = 0
      setInterval(() => {
        i++
        let height = i % 2 ? 4 : 0
        let opacity = i % 2
        animation.scaleY(height).opacity(opacity).step()
        // this.animationData = animation.export()
        this.anis[idx] = animation.export()
        this.$apply()
      }, 500)
      // animation.scaleY(4).step()
      // this.animationData = animation.export()
      // this.anis[idx] = animation.export()
      // return animation.export()
    }

    events = {
    }

    onLoad() {
    }
  }
</script>
