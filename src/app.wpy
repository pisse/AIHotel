<style lang="less">
.container1 {
  background-image: linear-gradient( 45deg, #5A4B43 , #2A2A2A 50% , #474139);
  height:100vh;
  overflow: hidden;
  // padding: 0 30rpx;

  font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;
  /*height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;*/
  .page-bd{
    // height: 100%;
  }
  .page-ft{
    // background-image: linear-gradient( 45deg, #5A4B43 , #474139);
    overflow: hidden;

    // flex: 0 0 100rpx;
    position: fixed;
    bottom: 0;
    width: 100%;
    // height: 200rpx;
  }
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      // 'test/test',
      'pages/index',
      'test/test-bg'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#2A2A2A',
      navigationBarTitleText: '智能助理',
      navigationBarTextStyle: 'white',
      backgroundColor: '#2A2A2A'
    }
  }

  globalData = {
    systemInfo: {},
    userInfo: null,
    footHeight: 260,
    clientHeight: '',
    cursorSpace: ''
  }

  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
    let self = this
    wx.getSystemInfo({
      success: function (res) {
        self.systemInfo = res
        const resFootHeight = self.globalData.footHeight * res.windowWidth / 750
        self.globalData.clientHeight = res.windowHeight - resFootHeight
      },
      fail: function () {
        const resFootHeight = self.globalData.footHeight * 2
        self.globalData.clientHeight = res.windowHeight - resFootHeight
      }
    })
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
    wx.getSetting({
      success(res) {
        if (!res.authSetting['scope.record']) {
          wx.authorize({
            scope: 'scope.record',
            success() {
              // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问
              // wx.startRecord()
              console.log('用户已经同意小程序使用录音功能')
            }
          })
        }
      }
    })
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
